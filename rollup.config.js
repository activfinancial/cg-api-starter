import nodeResolve from "rollup-plugin-node-resolve";
import commonjs from 'rollup-plugin-commonjs';
import typescript from "rollup-plugin-typescript2";
import builtins from "rollup-plugin-node-builtins";
import globals from "rollup-plugin-node-globals";
import serve from "rollup-plugin-serve";
import livereload from "rollup-plugin-livereload";
import { terser } from "rollup-plugin-terser";

const config = {
    input: "./src/index.ts",
    output: {
        file: "./lib/index.js",
        format: "umd",
        name: "activ_cg_api_starter",
        sourcemap: true
    },
    plugins: [
        nodeResolve({
            mainFields: ["module"],
            preferBuiltins: true
        }),
        commonjs(),
        builtins(),
        globals({
            // The ActivLiteContentGatewayApi.js generated by emscripten is runtime-agnostic. There's
            // some issue with the polyfill rollup generates for "__dirname" but we don't need it as
            // that code is node only in ActivLiteContentGatewayApi.js. All the others seem OK.
            dirname: false
        }),
        typescript()
    ]
};

export default function(args) {
    if (args["config-serve"]) {
        config.plugins.push(new serve({
			contentBase: ".",
			port: 8880
		}));
        // NB can't get livereload working...
        config.plugins.push(new livereload());
    }

    if (args["config-production"]) {
        config.plugins.push(new terser());
    }

    return config;
};
